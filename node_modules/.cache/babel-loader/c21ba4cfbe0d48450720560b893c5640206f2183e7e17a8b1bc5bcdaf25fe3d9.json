{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\project2\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport Registration from './components/Registration';\nimport Login from './components/Login';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Profile from './components/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:4000/api/user/userLogin', {\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      setIsAuthenticated(true);\n      // Redirect to profile page or dashboard\n    } catch (error) {\n      console.error(error);\n      // Show an error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        component: Registration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/profile\",\n        component: Profile,\n        isAuthenticated: isAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","axios","Registration","Login","ProtectedRoute","Profile","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","handleLogin","email","password","response","post","localStorage","setItem","data","token","error","console","children","exact","path","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/project2/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route , Routes} from 'react-router-dom';\nimport axios from 'axios';\nimport Registration from './components/Registration';\nimport Login from './components/Login';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Profile from './components/Profile';\n\n\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    const handleLogin = async (email, password) => {\n        try {\n            const response = await axios.post('http://localhost:4000/api/user/userLogin', { email, password });\n            localStorage.setItem('token', response.data.token);\n            setIsAuthenticated(true);\n            // Redirect to profile page or dashboard\n        } catch (error) {\n            console.error(error);\n            // Show an error message to the user\n        }\n    };\n\n    return (\n        <Router>\n            <Routes>\n                <Route exact path=\"/register\" component={Registration} />\n                <Route exact path=\"/login\">\n                    <Login handleLogin={handleLogin} />\n                </Route>\n                <ProtectedRoute\n                    exact\n                    path=\"/profile\"\n                    component={Profile}\n                    isAuthenticated={isAuthenticated}\n                />\n                {/* Other routes */}\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAGC,MAAM,QAAO,kBAAkB;AACzE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI3C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMgB,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,0CAA0C,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAClGG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;MAClDT,kBAAkB,CAAC,IAAI,CAAC;MACxB;IACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB;IACJ;EACJ,CAAC;EAED,oBACId,OAAA,CAACT,MAAM;IAAAyB,QAAA,eACHhB,OAAA,CAACP,MAAM;MAAAuB,QAAA,gBACHhB,OAAA,CAACR,KAAK;QAACyB,KAAK;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAExB;MAAa;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDvB,OAAA,CAACR,KAAK;QAACyB,KAAK;QAACC,IAAI,EAAC,QAAQ;QAAAF,QAAA,eACtBhB,OAAA,CAACJ,KAAK;UAACS,WAAW,EAAEA;QAAY;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACRvB,OAAA,CAACH,cAAc;QACXoB,KAAK;QACLC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAErB,OAAQ;QACnBK,eAAe,EAAEA;MAAgB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAACrB,EAAA,CAhCID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}