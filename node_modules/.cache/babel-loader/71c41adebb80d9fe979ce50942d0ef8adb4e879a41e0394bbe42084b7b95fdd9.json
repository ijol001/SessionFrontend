{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nconst NetworkStatusHandler = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleNetworkChange = () => {\n    if (!navigator.onLine) {\n      navigate('/offline'); // Redirect to the offline page\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('offline', handleNetworkChange);\n    window.addEventListener('online', handleNetworkChange);\n\n    // Check the initial network status\n    handleNetworkChange();\n    return () => {\n      window.removeEventListener('offline', handleNetworkChange);\n      window.removeEventListener('online', handleNetworkChange);\n    };\n  }, []);\n  return null; // This component does not render anything\n};\n_s(NetworkStatusHandler, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = NetworkStatusHandler;\nexport default NetworkStatusHandler;\nvar _c;\n$RefreshReg$(_c, \"NetworkStatusHandler\");","map":{"version":3,"names":["React","useEffect","useNavigate","NetworkStatusHandler","_s","navigate","handleNetworkChange","navigator","onLine","window","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/project2/frontend/src/components/NetworkStatusHandler.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NetworkStatusHandler = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleNetworkChange = () => {\r\n    if (!navigator.onLine) {\r\n      navigate('/offline'); // Redirect to the offline page\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('offline', handleNetworkChange);\r\n    window.addEventListener('online', handleNetworkChange);\r\n\r\n    // Check the initial network status\r\n    handleNetworkChange();\r\n\r\n    return () => {\r\n      window.removeEventListener('offline', handleNetworkChange);\r\n      window.removeEventListener('online', handleNetworkChange);\r\n    };\r\n  }, []);\r\n\r\n  return null; // This component does not render anything\r\n};\r\n\r\nexport default NetworkStatusHandler;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9B,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAACC,SAAS,CAACC,MAAM,EAAE;MACrBH,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;IACvDG,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEJ,mBAAmB,CAAC;;IAEtD;IACAA,mBAAmB,CAAC,CAAC;IAErB,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;MAC1DG,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEL,mBAAmB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACF,EAAA,CAvBID,oBAAoB;EAAA,QACPD,WAAW;AAAA;AAAAU,EAAA,GADxBT,oBAAoB;AAyB1B,eAAeA,oBAAoB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}