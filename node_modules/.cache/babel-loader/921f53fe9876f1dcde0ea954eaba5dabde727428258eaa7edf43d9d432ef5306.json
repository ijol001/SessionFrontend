{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\project2\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Alert, TextField, InputAdornment, IconButton, CircularProgress } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { useUserLoginMutation } from '../services/authApi';\n// import Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserLogin = () => {\n  _s();\n  const [error, setError] = useState({\n    status: false,\n    msg: '',\n    type: ''\n  });\n\n  // const [session, setSession] = useState(getSession());\n\n  const [userLogin, {\n    isLoading\n  }] = useUserLoginMutation();\n  const navigate = useNavigate();\n  const [captcha, setCaptcha] = useState('');\n  const [enteredCaptcha, setEnteredCaptcha] = useState('');\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\n  const [showPassword, setShowPassword] = useState(false);\n  const handlePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const generateCaptcha = () => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i < 6; i++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    setCaptcha(code);\n    drawCaptcha(code);\n  };\n  const drawCaptcha = code => {\n    const canvas = document.getElementById('captchaCanvas');\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Add background noise\n    for (let i = 0; i < 1000; i++) {\n      const x = Math.random() * canvas.width;\n      const y = Math.random() * canvas.height;\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1.1)`;\n      ctx.fillRect(x, y, 1, 2);\n    }\n\n    // Draw the text with random position and rotation\n    ctx.font = '37px Arial';\n    ctx.textBaseline = 'middle';\n    for (let i = 0; i < code.length; i++) {\n      const x = 30 + i * 30;\n      const y = 50 + Math.random() * 20;\n      const angle = (Math.random() - 0.5) * 0.4;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(angle);\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`;\n      ctx.fillText(code[i], 0, 0);\n      ctx.restore();\n    }\n\n    // Add more noise lines\n    for (let i = 0; i < 10; i++) {\n      const xStart = Math.random() * canvas.width;\n      const yStart = Math.random() * canvas.height;\n      const xEnd = Math.random() * canvas.width;\n      const yEnd = Math.random() * canvas.height;\n      ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.8)`;\n      ctx.beginPath();\n      ctx.moveTo(xStart, yStart);\n      ctx.lineTo(xEnd, yEnd);\n      ctx.stroke();\n    }\n  };\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n  const handleErrorTimeout = (message, type) => {\n    setError({\n      status: true,\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setError({\n        status: false,\n        msg: '',\n        type: ''\n      });\n    }, 5000);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (enteredCaptcha === captcha) {\n      const data = new FormData(e.currentTarget);\n      const actualData = {\n        email: data.get('email'),\n        password: data.get('password')\n      };\n      if (actualData.email && actualData.password !== null) {\n        if (!emailRegex.test(actualData.email)) {\n          handleErrorTimeout('Please enter a valid email address', 'error');\n          return;\n        }\n        if (!passwordRegex.test(actualData.password)) {\n          handleErrorTimeout('Password must be at least 6 characters long and contain at least one special character.', 'error');\n          return;\n        }\n        const res = await userLogin(actualData);\n        console.log(res);\n        if (res.data.status === 'success') {\n          console.log(res.data);\n          // Cookies.set('session', res.data.session, { expires: 1, path:'/' }); \n          setTimeout(() => {\n            navigate('/dashboard');\n            window.location.reload();\n          }, 3000);\n        }\n        if (res.data.status === 'failed') {\n          console.error('Error during login', error);\n          handleErrorTimeout(res.data.message, 'error');\n        }\n      } else {\n        handleErrorTimeout('All fields are required', 'error');\n      }\n    } else {\n      handleErrorTimeout('Captcha code does not match', 'error');\n      generateCaptcha();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: 'navy'\n      },\n      children: \"Welcome!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      sx: {\n        mt: 1,\n        p: 1,\n        maxWidth: '400px',\n        margin: 'auto'\n      },\n      id: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        type: showPassword ? 'text' : 'password',\n        label: \"Password\",\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handlePasswordVisibility,\n              edge: \"end\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 35\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"captcha\",\n        name: \"captcha\",\n        type: \"text\",\n        label: \"Captcha\",\n        value: enteredCaptcha,\n        onChange: e => setEnteredCaptcha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-container\",\n        style: {\n          textAlign: 'center',\n          margin: '10px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"captchaCanvas\",\n          width: \"200\",\n          height: \"100\",\n          textAlign: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '10px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 1,\n            px: 5,\n            backgroundColor: 'white',\n            color: 'navy',\n            fontWeight: '550'\n          },\n          onClick: generateCaptcha,\n          children: \"Regenerate CAPTCHA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 1,\n          color: 'white'\n        },\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            px: 5,\n            backgroundColor: 'white',\n            color: 'navy',\n            fontWeight: '550'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), error.status && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: error.type,\n        children: error.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UserLogin, \"o83lMwe7UZ5Jx30/hefMcjq/z0g=\", false, function () {\n  return [useUserLoginMutation, useNavigate];\n});\n_c = UserLogin;\nexport default UserLogin;\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Alert","TextField","InputAdornment","IconButton","CircularProgress","useNavigate","VisibilityIcon","VisibilityOffIcon","useUserLoginMutation","jsxDEV","_jsxDEV","Fragment","_Fragment","UserLogin","_s","error","setError","status","msg","type","userLogin","isLoading","navigate","captcha","setCaptcha","enteredCaptcha","setEnteredCaptcha","emailRegex","passwordRegex","showPassword","setShowPassword","handlePasswordVisibility","generateCaptcha","chars","code","i","charAt","Math","floor","random","length","drawCaptcha","canvas","document","getElementById","ctx","getContext","clearRect","width","height","x","y","fillStyle","fillRect","font","textBaseline","angle","save","translate","rotate","fillText","restore","xStart","yStart","xEnd","yEnd","strokeStyle","beginPath","moveTo","lineTo","stroke","handleErrorTimeout","message","setTimeout","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","email","get","password","test","res","console","log","window","location","reload","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","component","noValidate","sx","mt","p","maxWidth","margin","id","onSubmit","required","fullWidth","name","label","InputProps","endAdornment","position","onClick","edge","value","onChange","target","className","variant","px","backgroundColor","fontWeight","severity","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/project2/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, Alert, TextField, InputAdornment, IconButton, CircularProgress } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport { useUserLoginMutation } from '../services/authApi';\r\n// import Cookies from 'js-cookie';\r\n\r\nconst UserLogin = () => {\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    msg: '',\r\n    type: '',\r\n  });\r\n\r\n  // const [session, setSession] = useState(getSession());\r\n\r\n  const [userLogin, { isLoading }] = useUserLoginMutation();\r\n  const navigate = useNavigate();\r\n\r\n  const [captcha, setCaptcha] = useState('');\r\n  const [enteredCaptcha, setEnteredCaptcha] = useState('');\r\n\r\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\r\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{6,}$/;\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handlePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const generateCaptcha = () => {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let code = '';\r\n    for (let i = 0; i < 6; i++) {\r\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    setCaptcha(code);\r\n    drawCaptcha(code);\r\n  };\r\n\r\n  const drawCaptcha = (code) => {\r\n    const canvas = document.getElementById('captchaCanvas');\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Add background noise\r\n    for (let i = 0; i < 1000; i++) {\r\n      const x = Math.random() * canvas.width;\r\n      const y = Math.random() * canvas.height;\r\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1.1)`;\r\n      ctx.fillRect(x, y,1,2);\r\n    }\r\n\r\n    // Draw the text with random position and rotation\r\n    ctx.font = '37px Arial';\r\n    ctx.textBaseline = 'middle';\r\n    for (let i = 0; i < code.length; i++) {\r\n      const x = 30 + i * 30;\r\n      const y = 50 + Math.random() * 20;\r\n      const angle = (Math.random() - 0.5) * 0.4;\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n      ctx.rotate(angle);\r\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`;\r\n      ctx.fillText(code[i], 0, 0);\r\n      ctx.restore();\r\n    }\r\n\r\n    // Add more noise lines\r\n    for (let i = 0; i < 10; i++) {\r\n      const xStart = Math.random() * canvas.width;\r\n      const yStart = Math.random() * canvas.height;\r\n      const xEnd = Math.random() * canvas.width;\r\n      const yEnd = Math.random() * canvas.height;\r\n      ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.8)`;\r\n      ctx.beginPath();\r\n      ctx.moveTo(xStart, yStart);\r\n      ctx.lineTo(xEnd, yEnd);\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateCaptcha();\r\n  }, []);\r\n\r\n  const handleErrorTimeout = (message, type) => {\r\n    setError({ status: true, msg: message, type: type });\r\n    setTimeout(() => {\r\n      setError({ status: false, msg: '', type: '' });\r\n    }, 5000);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (enteredCaptcha === captcha) {\r\n      const data = new FormData(e.currentTarget);\r\n      const actualData = {\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n      };\r\n\r\n      if (actualData.email && actualData.password !== null) {\r\n        if (!emailRegex.test(actualData.email)) {\r\n          handleErrorTimeout('Please enter a valid email address', 'error');\r\n          return;\r\n        }\r\n        if (!passwordRegex.test(actualData.password)) {\r\n          handleErrorTimeout('Password must be at least 6 characters long and contain at least one special character.', 'error');\r\n          return;\r\n        }\r\n\r\n        const res = await userLogin(actualData);\r\n        console.log(res);\r\n\r\n        if (res.data.status === 'success') {\r\n          console.log(res.data)\r\n          // Cookies.set('session', res.data.session, { expires: 1, path:'/' }); \r\n          setTimeout(() => {\r\n            navigate('/dashboard');\r\n            window.location.reload();\r\n          }, 3000);\r\n        }\r\n        if (res.data.status === 'failed') {\r\n          console.error('Error during login', error);\r\n          handleErrorTimeout(res.data.message, 'error');\r\n        }\r\n      } else {\r\n        handleErrorTimeout('All fields are required', 'error');\r\n      }\r\n    } else {\r\n      handleErrorTimeout('Captcha code does not match', 'error');\r\n      generateCaptcha();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: 'center', color: 'navy' }}>Welcome!!!</h2>\r\n      <Box component='form' noValidate sx={{ mt: 1, p: 1, maxWidth: '400px', margin: 'auto' }} id='login-form' onSubmit={handleSubmit}>\r\n        <TextField margin='normal' required fullWidth id='email' name='email' label='Email Address' />\r\n        <TextField\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          id='password'\r\n          name='password'\r\n          type={showPassword ? 'text' : 'password'}\r\n          label='Password'\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <IconButton onClick={handlePasswordVisibility} edge='end'>\r\n                  {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"captcha\"\r\n          name=\"captcha\"\r\n          type=\"text\"\r\n          label=\"Captcha\"\r\n          value={enteredCaptcha}\r\n          onChange={(e) => setEnteredCaptcha(e.target.value)}\r\n        />\r\n        <div className=\"captcha-container\" style={{ textAlign: 'center', margin: '10px 0' }}>\r\n          <canvas id=\"captchaCanvas\" width=\"200\" height=\"100\" textAlign= 'center'></canvas>\r\n        </div>\r\n        <div style={{ textAlign: 'center', margin: '10px 0' }}>\r\n        <Button variant='contained' sx={{ mt: 1, px: 5, backgroundColor: 'white', color: 'navy', fontWeight: '550' }} onClick={generateCaptcha}>\r\n            Regenerate CAPTCHA\r\n          </Button></div>\r\n\r\n        <Box sx={{ textAlign: 'center', mt: 1, color: 'white' }}>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button type='submit' variant='contained' sx={{ mt: 3, px: 5, backgroundColor: 'white', color: 'navy', fontWeight: '550' }}>\r\n              Login\r\n            </Button>\r\n          )}\r\n          <br />\r\n          <br />\r\n        </Box>\r\n        {error.status && <Alert severity={error.type}>{error.msg}</Alert>}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}