{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';export const authApi=createApi({reducerPath:'authApi',baseQuery:fetchBaseQuery({baseUrl:'https://sessionback.onrender.com/api/user/'}),endpoints:builder=>({userReg:builder.mutation({query:user=>({url:'reg',method:'POST',body:user,headers:{'Content-type':'application/json'}})}),userLogin:builder.mutation({query:user=>({url:'login',method:'POST',body:user,headers:{'Content-type':'application/json'}})}),getLoggedUser:builder.query({query:session=>({url:\"/log-out\",method:'GET',headers:{'Cookie':\"session=\".concat(session)}})})})});export const{useUserRegMutation,useUserLoginMutation,useGetLoggedUserQuery}=authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","reducerPath","baseQuery","baseUrl","endpoints","builder","userReg","mutation","query","user","url","method","body","headers","userLogin","getLoggedUser","session","concat","useUserRegMutation","useUserLoginMutation","useGetLoggedUserQuery"],"sources":["C:/Users/Daigy Sarma/Desktop/project2/frontend/src/services/authApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://sessionback.onrender.com/api/user/'}),\r\n\r\n  endpoints: (builder) => ({\r\n    userReg: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'reg',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n    userLogin: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'login',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n\r\n    getLoggedUser: builder.query({\r\n      query: (session) => ({\r\n        url: `/log-out`,\r\n        method: 'GET',\r\n        headers: {\r\n          'Cookie': `session=${session}`, \r\n        },\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {useUserRegMutation,useUserLoginMutation,useGetLoggedUserQuery} = authApi;\r\n\r\n\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CAExE,MAAO,MAAM,CAAAC,OAAO,CAAGF,SAAS,CAAC,CAC/BG,WAAW,CAAE,SAAS,CACtBC,SAAS,CAAEH,cAAc,CAAC,CAAEI,OAAO,CAAE,4CAA4C,CAAC,CAAC,CAEnFC,SAAS,CAAGC,OAAO,GAAM,CACvBC,OAAO,CAAED,OAAO,CAACE,QAAQ,CAAC,CACxBC,KAAK,CAAGC,IAAI,GAAM,CAChBC,GAAG,CAAE,KAAK,CACVC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IAAI,CACVI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CACH,CAAC,CAAC,CACFC,SAAS,CAAET,OAAO,CAACE,QAAQ,CAAC,CAC1BC,KAAK,CAAGC,IAAI,GAAM,CAChBC,GAAG,CAAE,OAAO,CACZC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IAAI,CACVI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CACH,CAAC,CAAC,CAEFE,aAAa,CAAEV,OAAO,CAACG,KAAK,CAAC,CAC3BA,KAAK,CAAGQ,OAAO,GAAM,CACnBN,GAAG,WAAY,CACfC,MAAM,CAAE,KAAK,CACbE,OAAO,CAAE,CACP,QAAQ,YAAAI,MAAA,CAAaD,OAAO,CAC9B,CACF,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,MAAM,CAACE,kBAAkB,CAACC,oBAAoB,CAACC,qBAAqB,CAAC,CAAGpB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}