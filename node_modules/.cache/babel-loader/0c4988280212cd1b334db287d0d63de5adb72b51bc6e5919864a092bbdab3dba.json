{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:4000/api/user/'\n  }),\n  endpoints: builder => ({\n    userReg: builder.mutation({\n      query: user => ({\n        url: 'reg',\n        method: 'POST',\n        body: user,\n        headers: {\n          'Content-type': 'application/json'\n        }\n      })\n    }),\n    userLogin: builder.mutation({\n      query: user => ({\n        url: 'login',\n        method: 'POST',\n        body: user,\n        headers: {\n          'Content-type': 'application/json'\n        }\n      })\n    }),\n    getLoggedUser: builder.query({\n      query: session => ({\n        url: `/log-out`,\n        method: 'GET',\n        headers: {\n          'Cookie': `session=${session}`\n        }\n      })\n    })\n  })\n});\nexport const {\n  useUserRegMutation,\n  useUserLoginMutation,\n  useGetLoggedUserQuery\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","reducerPath","baseQuery","baseUrl","endpoints","builder","userReg","mutation","query","user","url","method","body","headers","userLogin","getLoggedUser","session","useUserRegMutation","useUserLoginMutation","useGetLoggedUserQuery"],"sources":["C:/Users/Daigy Sarma/Desktop/project2/frontend/src/services/authApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:4000/api/user/'}),\r\n\r\n  endpoints: (builder) => ({\r\n    userReg: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'reg',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n    userLogin: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'login',\r\n        method: 'POST',\r\n        body: user,\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n\r\n    getLoggedUser: builder.query({\r\n      query: (session) => ({\r\n        url: `/log-out`,\r\n        method: 'GET',\r\n        headers: {\r\n          'Cookie': `session=${session}`, \r\n        },\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {useUserRegMutation,useUserLoginMutation,useGetLoggedUserQuery} = authApi;\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAiC,CAAC,CAAC;EAExEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,OAAO,EAAED,OAAO,CAACE,QAAQ,CAAC;MACxBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,KAAK;QACVC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,IAAI;QACVI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC,CAAC;IACFC,SAAS,EAAET,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,IAAI;QACVI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC,CAAC;IAEFE,aAAa,EAAEV,OAAO,CAACG,KAAK,CAAC;MAC3BA,KAAK,EAAGQ,OAAO,KAAM;QACnBN,GAAG,EAAG,UAAS;QACfC,MAAM,EAAE,KAAK;QACbE,OAAO,EAAE;UACP,QAAQ,EAAG,WAAUG,OAAQ;QAC/B;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAACC,kBAAkB;EAACC,oBAAoB;EAACC;AAAqB,CAAC,GAAGnB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}