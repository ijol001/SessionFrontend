{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daigy Sarma\\\\Desktop\\\\project2\\\\frontend\\\\src\\\\components\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Button, Alert, TextField, InputAdornment, IconButton, CircularProgress } from '@mui/material';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useUserRegMutation } from \"../services/authApi\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserReg = () => {\n  _s();\n  const [error, setError] = useState({\n    status: false,\n    msg: '',\n    type: ''\n  });\n  const navigate = useNavigate();\n  const [userReg, {\n    isLoading\n  }] = useUserRegMutation();\n  const [captcha, setCaptcha] = useState('');\n  const [enteredCaptcha, setEnteredCaptcha] = useState('');\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{8,}$/;\n  const [showPassword, setShowPassword] = useState(false);\n  const handlePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const generateCaptcha = () => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i < 6; i++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    setCaptcha(code);\n    drawCaptcha(code);\n  };\n  const drawCaptcha = code => {\n    const canvas = document.getElementById('captchaCanvas');\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Add background noise\n    for (let i = 0; i < 1000; i++) {\n      const x = Math.random() * canvas.width;\n      const y = Math.random() * canvas.height;\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1.1)`;\n      ctx.fillRect(x, y);\n    }\n\n    // Draw the text with random position and rotation\n    ctx.font = '48px Arial';\n    ctx.textBaseline = 'middle';\n    for (let i = 0; i < code.length; i++) {\n      const x = 30 + i * 30;\n      const y = 50 + Math.random() * 20;\n      const angle = (Math.random() - 0.5) * 0.4;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(angle);\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`;\n      ctx.fillText(code[i], 0, 0);\n      ctx.restore();\n    }\n\n    // Add more noise lines\n    for (let i = 0; i < 10; i++) {\n      const xStart = Math.random() * canvas.width;\n      const yStart = Math.random() * canvas.height;\n      const xEnd = Math.random() * canvas.width;\n      const yEnd = Math.random() * canvas.height;\n      ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.8)`;\n      ctx.beginPath();\n      ctx.moveTo(xStart, yStart);\n      ctx.lineTo(xEnd, yEnd);\n      ctx.stroke();\n    }\n  };\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n  const handleErrorTimeout = (message, type) => {\n    setError({\n      status: true,\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setError({\n        status: false,\n        msg: '',\n        type: ''\n      });\n    }, 5000);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (enteredCaptcha === captcha) {\n      const data = new FormData(e.currentTarget);\n      const actualData = {\n        first_name: data.get('first_name'),\n        last_name: data.get('last_name'),\n        email: data.get('email'),\n        password: data.get('password'),\n        password_confirmation: data.get('password_confirmation'),\n        captcha: enteredCaptcha\n      };\n      if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation) {\n        if (!emailRegex.test(actualData.email)) {\n          handleErrorTimeout(\"Please enter a valid email address\", 'error');\n          return;\n        }\n        if (!passwordRegex.test(actualData.password)) {\n          handleErrorTimeout(\"Password must be at least 8 characters long and contain at least one special character and one alphanumeric character.\", 'error');\n          return;\n        }\n        if (actualData.password === actualData.password_confirmation) {\n          const res = await userReg(actualData);\n          console.log(res);\n          if (res.data.status === 'success') {\n            // Set a cookie with the session ID or other data\n            Cookies.set('session', res.data.sessionID, {\n              expires: 1,\n              path: '/'\n            });\n            setTimeout(() => {\n              navigate('/');\n              window.location.reload();\n            }, 3000);\n          } else {\n            console.error('error during registration', error);\n            handleErrorTimeout(res.data.message, 'error');\n          }\n        } else {\n          handleErrorTimeout(\"Password and Confirm Password don't match!\", 'error');\n        }\n      } else {\n        handleErrorTimeout('All fields are required', 'error');\n      }\n    } else {\n      handleErrorTimeout('Captcha code does not match', 'error');\n      generateCaptcha();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: 'navy'\n      },\n      children: \"Welcome!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      sx: {\n        mt: 0,\n        p: 1,\n        maxWidth: '400px',\n        margin: 'auto'\n      },\n      id: \"reg-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"first_name\",\n            name: \"first_name\",\n            label: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"last_name\",\n            name: \"last_name\",\n            label: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        type: showPassword ? 'text' : 'password',\n        label: \"Password\",\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handlePasswordVisibility,\n              edge: \"end\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 35\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password_confirmation\",\n        name: \"password_confirmation\",\n        type: \"password\",\n        label: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"captcha\",\n        name: \"captcha\",\n        type: \"text\",\n        label: \"Captcha\",\n        value: enteredCaptcha,\n        onChange: e => setEnteredCaptcha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"captchaCanvas\",\n          width: \"200\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: generateCaptcha,\n          children: \"Regenerate CAPTCHA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 1\n        },\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 1,\n            px: 5,\n            backgroundColor: 'white',\n            color: 'navy',\n            fontWeight: '550'\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/login\",\n          style: {\n            color: 'blue',\n            fontStyle: 'normal'\n          },\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), error.status && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: error.type,\n        sx: {\n          textAlign: 'center'\n        },\n        children: error.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UserReg, \"K7P/vuMS6OxxakDnj/4S7eENlQk=\", false, function () {\n  return [useNavigate, useUserRegMutation];\n});\n_c = UserReg;\nexport default UserReg;\nvar _c;\n$RefreshReg$(_c, \"UserReg\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Button","Alert","TextField","InputAdornment","IconButton","CircularProgress","NavLink","useNavigate","useUserRegMutation","VisibilityIcon","VisibilityOffIcon","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","UserReg","_s","error","setError","status","msg","type","navigate","userReg","isLoading","captcha","setCaptcha","enteredCaptcha","setEnteredCaptcha","emailRegex","passwordRegex","showPassword","setShowPassword","handlePasswordVisibility","generateCaptcha","chars","code","i","charAt","Math","floor","random","length","drawCaptcha","canvas","document","getElementById","ctx","getContext","clearRect","width","height","x","y","fillStyle","fillRect","font","textBaseline","angle","save","translate","rotate","fillText","restore","xStart","yStart","xEnd","yEnd","strokeStyle","beginPath","moveTo","lineTo","stroke","handleErrorTimeout","message","setTimeout","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","first_name","get","last_name","email","password","password_confirmation","test","res","console","log","set","sessionID","expires","path","window","location","reload","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","component","noValidate","sx","mt","p","maxWidth","margin","id","onSubmit","container","spacing","item","xs","required","fullWidth","name","label","InputProps","endAdornment","position","onClick","edge","value","onChange","target","className","variant","px","backgroundColor","fontWeight","to","fontStyle","severity","_c","$RefreshReg$"],"sources":["C:/Users/Daigy Sarma/Desktop/project2/frontend/src/components/Registration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Grid, Button, Alert, TextField, InputAdornment, IconButton, CircularProgress } from '@mui/material';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useUserRegMutation } from \"../services/authApi\";\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst UserReg = () => {\r\n  const [error, setError] = useState({ status: false, msg: '', type: '' });\r\n  const navigate = useNavigate();\r\n  const [userReg, { isLoading }] = useUserRegMutation();\r\n\r\n  const [captcha, setCaptcha] = useState('');\r\n  const [enteredCaptcha, setEnteredCaptcha] = useState('');\r\n\r\n  const emailRegex = /^\\S+@(?!invalid\\.com)([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\r\n  const passwordRegex = /^(?=.*[!@#$%^&*])(?=.*[a-zA-Z0-9]).{8,}$/;\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handlePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const generateCaptcha = () => {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let code = '';\r\n    for (let i = 0; i < 6; i++) {\r\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    setCaptcha(code);\r\n    drawCaptcha(code);\r\n  };\r\n\r\n  const drawCaptcha = (code) => {\r\n    const canvas = document.getElementById('captchaCanvas');\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Add background noise\r\n    for (let i = 0; i < 1000; i++) {\r\n      const x = Math.random() * canvas.width;\r\n      const y = Math.random() * canvas.height;\r\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1.1)`;\r\n      ctx.fillRect(x, y);\r\n    }\r\n\r\n    // Draw the text with random position and rotation\r\n    ctx.font = '48px Arial';\r\n    ctx.textBaseline = 'middle';\r\n    for (let i = 0; i < code.length; i++) {\r\n      const x = 30 + i * 30;\r\n      const y = 50 + Math.random() * 20;\r\n      const angle = (Math.random() - 0.5) * 0.4;\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n      ctx.rotate(angle);\r\n      ctx.fillStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`;\r\n      ctx.fillText(code[i], 0, 0);\r\n      ctx.restore();\r\n    }\r\n\r\n    // Add more noise lines\r\n    for (let i = 0; i < 10; i++) {\r\n      const xStart = Math.random() * canvas.width;\r\n      const yStart = Math.random() * canvas.height;\r\n      const xEnd = Math.random() * canvas.width;\r\n      const yEnd = Math.random() * canvas.height;\r\n      ctx.strokeStyle = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 0.8)`;\r\n      ctx.beginPath();\r\n      ctx.moveTo(xStart, yStart);\r\n      ctx.lineTo(xEnd, yEnd);\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateCaptcha();\r\n  }, []);\r\n\r\n  const handleErrorTimeout = (message, type) => {\r\n    setError({ status: true, msg: message, type: type });\r\n    setTimeout(() => {\r\n      setError({ status: false, msg: '', type: '' });\r\n    }, 5000);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (enteredCaptcha === captcha) {\r\n      const data = new FormData(e.currentTarget);\r\n      const actualData = {\r\n        first_name: data.get('first_name'),\r\n        last_name: data.get('last_name'),\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n        password_confirmation: data.get('password_confirmation'),\r\n        captcha: enteredCaptcha,\r\n      };\r\n\r\n      if (actualData.first_name && actualData.last_name && actualData.email && actualData.password && actualData.password_confirmation) {\r\n        if (!emailRegex.test(actualData.email)) {\r\n          handleErrorTimeout(\"Please enter a valid email address\", 'error');\r\n          return;\r\n        }\r\n        if (!passwordRegex.test(actualData.password)) {\r\n          handleErrorTimeout(\"Password must be at least 8 characters long and contain at least one special character and one alphanumeric character.\", 'error');\r\n          return;\r\n        }\r\n        if (actualData.password === actualData.password_confirmation) {\r\n          const res = await userReg(actualData);\r\n          console.log(res);\r\n\r\n          if (res.data.status === 'success') {\r\n            // Set a cookie with the session ID or other data\r\n            Cookies.set('session', res.data.sessionID, { expires: 1, path: '/' });\r\n            setTimeout(() => {\r\n              navigate('/');\r\n              window.location.reload();\r\n            }, 3000);\r\n          } else {\r\n            console.error('error during registration', error);\r\n            handleErrorTimeout(res.data.message, 'error');\r\n          }\r\n        } else {\r\n          handleErrorTimeout(\"Password and Confirm Password don't match!\", 'error');\r\n        }\r\n      } else {\r\n        handleErrorTimeout('All fields are required', 'error');\r\n      }\r\n    } else {\r\n      handleErrorTimeout('Captcha code does not match', 'error');\r\n      generateCaptcha();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: 'center', color: 'navy' }}>Welcome!!!</h2>\r\n\r\n      <Box component=\"form\" noValidate sx={{ mt: 0, p: 1, maxWidth: '400px', margin: 'auto' }} id=\"reg-form\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <TextField margin=\"normal\" required fullWidth id=\"first_name\" name=\"first_name\" label=\"First Name\" />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField margin=\"normal\" required fullWidth id=\"last_name\" name=\"last_name\" label=\"Last Name\" />\r\n          </Grid>\r\n        </Grid>\r\n        <TextField margin=\"normal\" required fullWidth id=\"email\" name=\"email\" label=\"Email Address\" />\r\n        <TextField\r\n          margin='normal' required fullWidth id='password' name='password' type={showPassword ? 'text' : 'password'} label='Password' InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <IconButton onClick={handlePasswordVisibility} edge='end'>\r\n                  {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          margin='normal' required fullWidth id='password_confirmation' name='password_confirmation' type='password' label='Confirm Password' />\r\n         <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"captcha\"\r\n          name=\"captcha\"\r\n          type=\"text\"\r\n          label=\"Captcha\"\r\n          value={enteredCaptcha}\r\n          onChange={(e) => setEnteredCaptcha(e.target.value)}\r\n        />\r\n        <div className=\"captcha-container\">\r\n          <canvas id=\"captchaCanvas\" width=\"200\" height=\"100\"></canvas>\r\n          <button type=\"button\" onClick={generateCaptcha}>Regenerate CAPTCHA</button>\r\n        </div>\r\n        <Box sx={{ textAlign: 'center', mt: 1 }}>\r\n        {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 1, px: 5, backgroundColor: 'white', color: 'navy', fontWeight: '550' }}>\r\n            Register\r\n          </Button>\r\n          )}\r\n          <br /><br />\r\n          <NavLink to='/login' style={{ color: 'blue', fontStyle: 'normal' }}>Already have an account?</NavLink>\r\n        </Box>\r\n        {error.status && <Alert severity={error.type} sx={{ textAlign: 'center' }}>{error.msg}</Alert>}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserReg;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,cAAc,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AACjH,SAASC,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;AACvD,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC;IAAEwB,MAAM,EAAE,KAAK;IAAEC,GAAG,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACxE,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,OAAO,EAAE;IAAEC;EAAU,CAAC,CAAC,GAAGjB,kBAAkB,CAAC,CAAC;EAErD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMkC,UAAU,GAAG,uDAAuD;EAC1E,MAAMC,aAAa,GAAG,0CAA0C;EAEhE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMsC,wBAAwB,GAAGA,CAAA,KAAM;IACrCD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,KAAK,GAAG,gEAAgE;IAC9E,IAAIC,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,IAAI,IAAID,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,KAAK,CAACO,MAAM,CAAC,CAAC;IAChE;IACAhB,UAAU,CAACU,IAAI,CAAC;IAChBO,WAAW,CAACP,IAAI,CAAC;EACnB,CAAC;EAED,MAAMO,WAAW,GAAIP,IAAI,IAAK;IAC5B,MAAMQ,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;IACvD,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACO,MAAM,CAAC;;IAEhD;IACA,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,EAAE,EAAE;MAC7B,MAAMe,CAAC,GAAGb,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,MAAM,CAACM,KAAK;MACtC,MAAMG,CAAC,GAAGd,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,MAAM,CAACO,MAAM;MACvCJ,GAAG,CAACO,SAAS,GAAG,QAAQf,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAKF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAKF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ;MACvIM,GAAG,CAACQ,QAAQ,CAACH,CAAC,EAAEC,CAAC,CAAC;IACpB;;IAEA;IACAN,GAAG,CAACS,IAAI,GAAG,YAAY;IACvBT,GAAG,CAACU,YAAY,GAAG,QAAQ;IAC3B,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACM,MAAM,EAAEL,CAAC,EAAE,EAAE;MACpC,MAAMe,CAAC,GAAG,EAAE,GAAGf,CAAC,GAAG,EAAE;MACrB,MAAMgB,CAAC,GAAG,EAAE,GAAGd,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;MACjC,MAAMiB,KAAK,GAAG,CAACnB,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG;MACzCM,GAAG,CAACY,IAAI,CAAC,CAAC;MACVZ,GAAG,CAACa,SAAS,CAACR,CAAC,EAAEC,CAAC,CAAC;MACnBN,GAAG,CAACc,MAAM,CAACH,KAAK,CAAC;MACjBX,GAAG,CAACO,SAAS,GAAG,QAAQf,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAKF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAKF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM;MACrIM,GAAG,CAACe,QAAQ,CAAC1B,IAAI,CAACC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC3BU,GAAG,CAACgB,OAAO,CAAC,CAAC;IACf;;IAEA;IACA,KAAK,IAAI1B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAM2B,MAAM,GAAGzB,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,MAAM,CAACM,KAAK;MAC3C,MAAMe,MAAM,GAAG1B,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,MAAM,CAACO,MAAM;MAC5C,MAAMe,IAAI,GAAG3B,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,MAAM,CAACM,KAAK;MACzC,MAAMiB,IAAI,GAAG5B,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,MAAM,CAACO,MAAM;MAC1CJ,GAAG,CAACqB,WAAW,GAAG,QAAQ7B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAKF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAKF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ;MACzIM,GAAG,CAACsB,SAAS,CAAC,CAAC;MACftB,GAAG,CAACuB,MAAM,CAACN,MAAM,EAAEC,MAAM,CAAC;MAC1BlB,GAAG,CAACwB,MAAM,CAACL,IAAI,EAAEC,IAAI,CAAC;MACtBpB,GAAG,CAACyB,MAAM,CAAC,CAAC;IACd;EACF,CAAC;EAED5E,SAAS,CAAC,MAAM;IACdsC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMuC,kBAAkB,GAAGA,CAACC,OAAO,EAAErD,IAAI,KAAK;IAC5CH,QAAQ,CAAC;MAAEC,MAAM,EAAE,IAAI;MAAEC,GAAG,EAAEsD,OAAO;MAAErD,IAAI,EAAEA;IAAK,CAAC,CAAC;IACpDsD,UAAU,CAAC,MAAM;MACfzD,QAAQ,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,CAAC;IAChD,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMuD,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAInD,cAAc,KAAKF,OAAO,EAAE;MAC9B,MAAMsD,IAAI,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,aAAa,CAAC;MAC1C,MAAMC,UAAU,GAAG;QACjBC,UAAU,EAAEJ,IAAI,CAACK,GAAG,CAAC,YAAY,CAAC;QAClCC,SAAS,EAAEN,IAAI,CAACK,GAAG,CAAC,WAAW,CAAC;QAChCE,KAAK,EAAEP,IAAI,CAACK,GAAG,CAAC,OAAO,CAAC;QACxBG,QAAQ,EAAER,IAAI,CAACK,GAAG,CAAC,UAAU,CAAC;QAC9BI,qBAAqB,EAAET,IAAI,CAACK,GAAG,CAAC,uBAAuB,CAAC;QACxD3D,OAAO,EAAEE;MACX,CAAC;MAED,IAAIuD,UAAU,CAACC,UAAU,IAAID,UAAU,CAACG,SAAS,IAAIH,UAAU,CAACI,KAAK,IAAIJ,UAAU,CAACK,QAAQ,IAAIL,UAAU,CAACM,qBAAqB,EAAE;QAChI,IAAI,CAAC3D,UAAU,CAAC4D,IAAI,CAACP,UAAU,CAACI,KAAK,CAAC,EAAE;UACtCb,kBAAkB,CAAC,oCAAoC,EAAE,OAAO,CAAC;UACjE;QACF;QACA,IAAI,CAAC3C,aAAa,CAAC2D,IAAI,CAACP,UAAU,CAACK,QAAQ,CAAC,EAAE;UAC5Cd,kBAAkB,CAAC,wHAAwH,EAAE,OAAO,CAAC;UACrJ;QACF;QACA,IAAIS,UAAU,CAACK,QAAQ,KAAKL,UAAU,CAACM,qBAAqB,EAAE;UAC5D,MAAME,GAAG,GAAG,MAAMnE,OAAO,CAAC2D,UAAU,CAAC;UACrCS,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAEhB,IAAIA,GAAG,CAACX,IAAI,CAAC5D,MAAM,KAAK,SAAS,EAAE;YACjC;YACAT,OAAO,CAACmF,GAAG,CAAC,SAAS,EAAEH,GAAG,CAACX,IAAI,CAACe,SAAS,EAAE;cAAEC,OAAO,EAAE,CAAC;cAAEC,IAAI,EAAE;YAAI,CAAC,CAAC;YACrErB,UAAU,CAAC,MAAM;cACfrD,QAAQ,CAAC,GAAG,CAAC;cACb2E,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;YAC1B,CAAC,EAAE,IAAI,CAAC;UACV,CAAC,MAAM;YACLR,OAAO,CAAC1E,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;YACjDwD,kBAAkB,CAACiB,GAAG,CAACX,IAAI,CAACL,OAAO,EAAE,OAAO,CAAC;UAC/C;QACF,CAAC,MAAM;UACLD,kBAAkB,CAAC,4CAA4C,EAAE,OAAO,CAAC;QAC3E;MACF,CAAC,MAAM;QACLA,kBAAkB,CAAC,yBAAyB,EAAE,OAAO,CAAC;MACxD;IACF,CAAC,MAAM;MACLA,kBAAkB,CAAC,6BAA6B,EAAE,OAAO,CAAC;MAC1DvC,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACEtB,OAAA,CAAAE,SAAA;IAAAsF,QAAA,gBACExF,OAAA;MAAIyF,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElE/F,OAAA,CAACf,GAAG;MAAC+G,SAAS,EAAC,MAAM;MAACC,UAAU;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO,CAAE;MAACC,EAAE,EAAC,UAAU;MAACC,QAAQ,EAAExC,YAAa;MAAAwB,QAAA,gBAC5HxF,OAAA,CAACd,IAAI;QAACuH,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAlB,QAAA,gBACzBxF,OAAA,CAACd,IAAI;UAACyH,IAAI;UAACC,EAAE,EAAE,CAAE;UAAApB,QAAA,eACfxF,OAAA,CAACX,SAAS;YAACiH,MAAM,EAAC,QAAQ;YAACO,QAAQ;YAACC,SAAS;YAACP,EAAE,EAAC,YAAY;YAACQ,IAAI,EAAC,YAAY;YAACC,KAAK,EAAC;UAAY;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC,eACP/F,OAAA,CAACd,IAAI;UAACyH,IAAI;UAACC,EAAE,EAAE,CAAE;UAAApB,QAAA,eACfxF,OAAA,CAACX,SAAS;YAACiH,MAAM,EAAC,QAAQ;YAACO,QAAQ;YAACC,SAAS;YAACP,EAAE,EAAC,WAAW;YAACQ,IAAI,EAAC,WAAW;YAACC,KAAK,EAAC;UAAW;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACP/F,OAAA,CAACX,SAAS;QAACiH,MAAM,EAAC,QAAQ;QAACO,QAAQ;QAACC,SAAS;QAACP,EAAE,EAAC,OAAO;QAACQ,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAe;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9F/F,OAAA,CAACX,SAAS;QACRiH,MAAM,EAAC,QAAQ;QAACO,QAAQ;QAACC,SAAS;QAACP,EAAE,EAAC,UAAU;QAACQ,IAAI,EAAC,UAAU;QAACtG,IAAI,EAAEU,YAAY,GAAG,MAAM,GAAG,UAAW;QAAC6F,KAAK,EAAC,UAAU;QAACC,UAAU,EAAE;UACtIC,YAAY,eACVlH,OAAA,CAACV,cAAc;YAAC6H,QAAQ,EAAC,KAAK;YAAA3B,QAAA,eAC5BxF,OAAA,CAACT,UAAU;cAAC6H,OAAO,EAAE/F,wBAAyB;cAACgG,IAAI,EAAC,KAAK;cAAA7B,QAAA,EACtDrE,YAAY,gBAAGnB,OAAA,CAACJ,cAAc;gBAAAgG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAG/F,OAAA,CAACH,iBAAiB;gBAAA+F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAEpB;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF/F,OAAA,CAACX,SAAS;QACRiH,MAAM,EAAC,QAAQ;QAACO,QAAQ;QAACC,SAAS;QAACP,EAAE,EAAC,uBAAuB;QAACQ,IAAI,EAAC,uBAAuB;QAACtG,IAAI,EAAC,UAAU;QAACuG,KAAK,EAAC;MAAkB;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvI/F,OAAA,CAACX,SAAS;QACTiH,MAAM,EAAC,QAAQ;QACfO,QAAQ;QACRC,SAAS;QACTP,EAAE,EAAC,SAAS;QACZQ,IAAI,EAAC,SAAS;QACdtG,IAAI,EAAC,MAAM;QACXuG,KAAK,EAAC,SAAS;QACfM,KAAK,EAAEvG,cAAe;QACtBwG,QAAQ,EAAGtD,CAAC,IAAKjD,iBAAiB,CAACiD,CAAC,CAACuD,MAAM,CAACF,KAAK;MAAE;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACF/F,OAAA;QAAKyH,SAAS,EAAC,mBAAmB;QAAAjC,QAAA,gBAChCxF,OAAA;UAAQuG,EAAE,EAAC,eAAe;UAACjE,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC;QAAK;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC7D/F,OAAA;UAAQS,IAAI,EAAC,QAAQ;UAAC2G,OAAO,EAAE9F,eAAgB;UAAAkE,QAAA,EAAC;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACN/F,OAAA,CAACf,GAAG;QAACiH,EAAE,EAAE;UAAER,SAAS,EAAE,QAAQ;UAAES,EAAE,EAAE;QAAE,CAAE;QAAAX,QAAA,GACvC5E,SAAS,gBACNZ,OAAA,CAACR,gBAAgB;UAAAoG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEtB/F,OAAA,CAACb,MAAM;UAACsB,IAAI,EAAC,QAAQ;UAACiH,OAAO,EAAC,WAAW;UAACxB,EAAE,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEwB,EAAE,EAAE,CAAC;YAAEC,eAAe,EAAE,OAAO;YAAEjC,KAAK,EAAE,MAAM;YAAEkC,UAAU,EAAE;UAAM,CAAE;UAAArC,QAAA,EAAC;QAE5H;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACP,eACD/F,OAAA;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAAA/F,OAAA;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACZ/F,OAAA,CAACP,OAAO;UAACqI,EAAE,EAAC,QAAQ;UAACrC,KAAK,EAAE;YAAEE,KAAK,EAAE,MAAM;YAAEoC,SAAS,EAAE;UAAS,CAAE;UAAAvC,QAAA,EAAC;QAAwB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnG,CAAC,EACL1F,KAAK,CAACE,MAAM,iBAAIP,OAAA,CAACZ,KAAK;QAAC4I,QAAQ,EAAE3H,KAAK,CAACI,IAAK;QAACyF,EAAE,EAAE;UAAER,SAAS,EAAE;QAAS,CAAE;QAAAF,QAAA,EAAEnF,KAAK,CAACG;MAAG;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC3F,EAAA,CAzLID,OAAO;EAAA,QAEMT,WAAW,EACKC,kBAAkB;AAAA;AAAAsI,EAAA,GAH/C9H,OAAO;AA2Lb,eAAeA,OAAO;AAAC,IAAA8H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}